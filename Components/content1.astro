---
import type { Content as Props } from '~/types';
import Headline from '../ui/Headline.astro';
import WidgetWrapper from '../ui/WidgetWrapper.astro';
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import ItemGrid from '../ui/ItemGrid.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  callToAction,
  items = [],
  columns,
  image = await Astro.slots.render('image'),
  isReversed = false,
  isAfterContent = false,
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<!-- Full-width background wrapper -->
<div class="w-full overflow-hidden bg-[#eff6ff] dark:bg-transparent">
  <WidgetWrapper
    id={id}
    isDark={isDark}
    containerClass={`w-full max-w-6xl mx-auto px-3 sm:px-4 md:px-6 lg:px-8 py-8 ${isAfterContent ? 'pt-0' : ''} ${classes?.container ?? ''}`}
    bg={bg}
  >
    <Headline
      title={title}
      subtitle={subtitle}
      tagline={tagline}
      classes={{
        container: 'max-w-xl sm:mx-auto lg:max-w-2xl',
        title: 'text-4xl md:text-5xl font-bold tracking-tighter mb-4 font-heading',
        subtitle: 'max-w-3xl mx-auto sm:text-center text-xl text-gray-600 dark:text-gray-300',
      }}
    />

    <div class="mx-auto max-w-6xl px-2 sm:px-4 md:px-8">
      <div class="flex flex-col gap-4 md:gap-8">
        
        <!-- Image Section -->
        {image && (
          <div class="relative m-auto max-w-4xl">
            {typeof image === 'string' ? (
              <div set:html={image}></div>
            ) : (
              <Image
                class="mx-auto w-full max-w-[90%] md:max-w-[80%] rounded-lg bg-gray-500 shadow-lg"
                width={500}
                height={500}
                layout="intrinsic"
                {...image}
              />
            )}
          </div>
        )}

        <!-- Content Section -->
        <div class="text-lg text-gray-700 dark:text-gray-300">
          {content && <div class="mt-4" set:html={content}></div>}

          {callToAction && (
            <div class="mt-6">
              <Button variant="link" {...callToAction} />
            </div>
          )}

          <ItemGrid
            items={items}
            columns={columns}
            defaultIcon="tabler:check"
            classes={{
              container: 'gap-y-4 md:gap-y-8',
              panel: 'max-w-none text-justify',
              title: 'text-lg font-medium leading-6 text-gray-900 dark:text-white ml-2 rtl:ml-0 rtl:mr-2',
              description: 'whitespace-pre-line text-justify text-gray-600 dark:text-gray-400 ml-2 rtl:ml-0 rtl:mr-2',
              icon: 'hidden',
              action: 'text-lg font-medium leading-6 text-gray-900 dark:text-white ml-2 rtl:ml-0 rtl:mr-2',
            }}
          />
        </div>

      </div>
    </div>
  </WidgetWrapper>
</div>
